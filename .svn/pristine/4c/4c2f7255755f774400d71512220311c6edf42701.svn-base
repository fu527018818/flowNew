<template>
    <div class="app" ref="videoWin" v-if="lists">
        <div class="playerBg">
            <img src="../../assets/img/software/off-line.png" alt="离线">
        </div>
        <video-player 
        v-if="lists.is_fault=='1'?true:false" 
        class="vjs-custom-skin" 
        ref="videoPlayer"
        :options="playerOptions"
        @ready="onPlayerReadied"
        @timeupdate="onTimeupdate"
        @play="onPlayerPlay($event)"
        @pause="onPlayerPause($event)"
        >
        </video-player>
        <transition name="fade">
            <div v-if="showControl" class="controlBar" ref="videoControl">
                <span class="tesn_tit">设备号：1232323</span>
                <ul class="BarRight" >
                    <li>
                        <i @click="playVideoEvent" :class="['iconfont',bplay?'icon-zanting':'icon-bofang']"></i>
                    </li>
                    <li class="cutDefinition">
                        <span>{{currentFlow}}</span>
                        <ul class="selectDefin">
                            <li @click= changeFlow(item) v-for="item in currentVideo" :key="item">{{item}}</li>
                        </ul>
                    </li>
                    <li @click="screenshot"><i class="iconfont icon-icon--"></i></li>
                    <li @click="transcribe">
                        <i class="iconfont icon-luzhi"></i>
                    </li>
                    <li>
                        <i @click="toggleFullScreen" class="iconfont icon-quanping"></i>
                    </li>
                </ul>
            </div>
        </transition>
    </div>
</template>
<script>
export default {
  name: "realPalyer",
  props:['lists'],
  data() {
    return {
      currentTech: "html5",
      CurrentScreenImg:"http://www.taopic.com/uploads/allimg/140729/240450-140HZP45790.jpg",
      showControl:true,
      handleControl:null,
      currentFlow:"高清",
      currentVideo:['高清','流畅'],
      bplay:false,   //是否播放
      playerOptions: {
        overNative: false,
        autoplay: false,
        controls: false,
        techOrder: ["html5"],
        sourceOrder: true,
        flash: { hls: { withCredentials: false } },
        html5: { hls: { withCredentials: false } },
        sources: [
          {
            withCredentials: false,
            type: "application/x-mpegURL",
            // src:"http://video.dianliubao.com/replay?te_sn=00e070747d47&date=2018-02-07&slice=09.00"
            // src:"http://video.dianliubao.com:8080/hls/00e070747d47.m3u8"
            src:""
          }
        ],
        poster: "",
        controlBar: {
          playToggle: false, //开关
          volumePanel: {
            //声音控制器
            inline: false,
            vertical: true
          },
          currentTimeDisplay: false, //当前时间
          timeDivider: false,
          durationDisplay: false,
          progressControl: {
            // 进度条
            SeekBar: {}
          },
          liveDisplay: false,
          remainingTimeDisplay: false,
          customControlSpacer: false, //当前时间
          playbackRateMenuButton: false,
          chaptersButton: false,
          descriptionsButton: false,
          subtitlesButton: false,
          captionsButton: false,
          audioTrackButton: false,
          fullscreenToggle: true, // 全屏
          muteToggle: false //禁音按钮
        }
      }
    };
  },
  computed: {
    player() {
      return this.$refs.videoPlayer.player;
    }
  },
  created() {
    
  },
  mounted() {
    this.playerOptions.sources[0].src="http://video.dianliubao.com/replay?te_sn=00e070747d47&date=2018-02-07&slice=09.00";
    // // this.playerOptions.sources[0].src = "http://182.61.53.175:80/hls/test2.m3u8"
    // this.playerOptions.autoplay = true
    this.$refs.videoWin.addEventListener('mouseenter',()=>{
        this.showControl = true;
        this.restBarTimeout();
    })

    this.$refs.videoWin.addEventListener('mousemove',()=>{
        this.showControl = true;
        this.restBarTimeout();
    })
    // this.player.on('play', (event)=>{
    //   console.log(123)
    //     event.preventDefault();
    //     /* Act on the event */
    //     this.bplay = true;
    // });
    // this.player.on('pause', (event)=>{
    //      console.log(123)
    //     event.preventDefault();
    //     this.bplay = false;
    // });
    //穿透
    this.player.on('click', (event)=>{
        event.preventDefault();
        this.$router.push({name:"recording",params:{currentVideo:this.lists}})
    });
  },
  beforeDestory(){
        if (this.handleControl) {
            clearTimeout(this.handleControl);
            this.handleControl = null;
        }
  },
  methods: {
    onPlayerReadied() {
      // if (!this.initialized) {
      //   this.initialized = true;
      //   this.currentTech = this.player.techName_;
      // }
    },
    onTimeupdate(e) {
      // console.log('currentTime', e.cache_.currentTime)
    },
    restBarTimeout() {
        if (this.handleControl) {
            clearTimeout(this.handleControl);
            this.handleControl = null;
        }
        this.handleControl = setTimeout(() => {
            this.showControl = false;
        }, 3000);
    },
    playVideoEvent(){
      if (this.bplay) {
        this.player.pause();
      }else{
        this.player.play();
      }
    },
    toggleFullScreen(){
        this.player.requestFullscreen();
    },
    changeFlow(val){
        this.currentFlow = val;
    },//截图
    screenshot(){
     var  video = $(this.player.el_.childNodes).get(0);
      var canvas = document.createElement("canvas");
      canvas.width = 478
      canvas.height = 285
      canvas.getContext('2d')
      .drawImage(video, 0, 0, canvas.width, canvas.height);
      var imgUrl = canvas.toDataURL();
      this.$emit('uploadImg',imgUrl);
  },
  transcribe(){
    console.log(123)
  },
  onPlayerPlay(){
    this.bplay = true;
    console.log(123)
  },
  onPlayerPause(){
    this.bplay = false;
    console.log(123)
  }
},
  watch:{

  }
}
</script>

<style scoped lang="scss">
.app {
  position: relative;
  cursor: pointer;
  & .video {
    width: 100%;
    height: 100%;
    position: relative;
    z-index: 9;
  }
  .playerBg{
    width: 100%;
    height:100%;
    position: absolute;
    top:0;
    left:0;
  }
  .controlBar {
    height: 40px;
    width: 100%;
    line-height: 40px;
    background-color: #333;
    position: absolute;
    bottom: 0;
    z-index: 10;
    opacity: 0.8;
    color: #ffffff;
    cursor:initial;
    & .tesn_tit {
      font-size: 12px;
      padding: 0 20px 0 12px;
    }
    & .BarRight {
      float: right;
      cursor: pointer;
      & > li {
        float: left;
        line-height: 40px;
        height: 40px;
        padding: 0 10px;

        & .iconfont {
          font-size: 18px;
        }
        & .iconfont:hover{
          color: #4198ff;
        }
        & .iconfont.icon-icon--{
          font-size: 22px;
        }
      }
    }
  }
  .cutDefinition {
    font-size: 12px;
    position: relative;
    &:hover .selectDefin {
      display: block;
    }
    cursor: pointer;
    .selectDefin {
      display: none;
      position: absolute;
      box-sizing: content-box;
      left: 0;
      top: -80px;
      background: rgba(0, 0, 0, 0.8);
      & > li {
        box-sizing: content-box;
        padding: 0 10px;
        opacity: 1;
        cursor: pointer;
        &:hover {
          background-color: #4198ff;
        }
      }
    }
  }
}
.video-player.vjs-custom-skin {
  width: 100%;
  height: 100%;
}

</style>